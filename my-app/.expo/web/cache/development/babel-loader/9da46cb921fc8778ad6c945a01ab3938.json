{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport GestureHandler from \"./GestureHandler\";\n\nvar ManualGestureHandler = function (_GestureHandler) {\n  _inherits(ManualGestureHandler, _GestureHandler);\n\n  var _super = _createSuper(ManualGestureHandler);\n\n  function ManualGestureHandler() {\n    _classCallCheck(this, ManualGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ManualGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n\n      this.begin();\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tracker.track(event);\n\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n\n      this.tracker.removeFromTracker(event.pointerId);\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n\n      this.tracker.removeFromTracker(event.pointerId);\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      _get(_getPrototypeOf(ManualGestureHandler.prototype), \"onPointerCancel\", this).call(this, event);\n\n      this.reset();\n    }\n  }]);\n\n  return ManualGestureHandler;\n}(GestureHandler);\n\nexport { ManualGestureHandler as default };","map":{"version":3,"sources":["ManualGestureHandler.ts"],"names":["init","onPointerDown","onPointerAdd","onPointerMove","onPointerUp","event","onPointerRemove","onPointerCancel"],"mappings":";;;;;;;;;;;AACA,OAAA,cAAA;;IAEe,oB;;;;;;;;;;;;;WACNA,cAAI,GAAJA,EAAI,QAAJA,EAAsD;MAC3D,+EAAA,GAAA,EAAA,QAAA;IACD;;;WAESC,uBAAa,KAAbA,EAAyC;MACjD,KAAA,OAAA,CAAA,YAAA,CAAA,KAAA;;MACA,wFAAA,KAAA;;MACA,KAAA,KAAA;IACD;;;WAESC,sBAAY,KAAZA,EAAwC;MAChD,KAAA,OAAA,CAAA,YAAA,CAAA,KAAA;;MACA,uFAAA,KAAA;IACD;;;WAESC,uBAAa,KAAbA,EAAyC;MACjD,KAAA,OAAA,CAAA,KAAA,CAAA,KAAA;;MACA,wFAAA,KAAA;IACD;;;WAESC,qBAAW,KAAXA,EAAuC;MAC/C,sFAAA,KAAA;;MACA,KAAA,OAAA,CAAA,iBAAA,CAA+BC,KAAK,CAApC,SAAA;IACD;;;WAESC,yBAAe,KAAfA,EAA2C;MACnD,0FAAA,KAAA;;MACA,KAAA,OAAA,CAAA,iBAAA,CAA+BD,KAAK,CAApC,SAAA;IACD;;;WAESE,yBAAe,KAAfA,EAA2C;MACnD,0FAAA,KAAA;;MACA,KAAA,KAAA;IACD;;;;EAlCY,c;;SAAA,oB","sourcesContent":["import { AdaptedEvent } from '../interfaces';\nimport GestureHandler from './GestureHandler';\n\nexport default class ManualGestureHandler extends GestureHandler {\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.begin();\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n    super.onPointerMove(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  protected onPointerCancel(event: AdaptedEvent): void {\n    super.onPointerCancel(event);\n    this.reset();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}